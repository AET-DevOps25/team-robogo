plugins {
	id 'java'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.springframework.boot' version '3.2.0'
}

group = 'de.fll.server'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.integration:spring-integration-mqtt'
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "com.google.protobuf:protobuf-java:3.25.1"

	implementation 'org.postgresql:postgresql'
	implementation "jakarta.annotation:jakarta.annotation-api"

	implementation project(':core')

	developmentOnly 'com.h2database:h2:2.3.232'
	// developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.projectlombok:lombok:${lombokVersion}"
		mavenBom "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
		mavenBom "org.junit.jupiter:junit-jupiter:${junitVersion}"
		mavenBom "org.postgresql:postgresql:${postgresqlVersion}"
	}
}

bootJar {
    mainClass = 'de.fll.screen.FllScreenApplication'
}

tasks.named('test') {
	useJUnitPlatform()
}
