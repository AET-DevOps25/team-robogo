name: AWS Deployment

# For testing purposes I want this to be inputed manually right now.
# When everything is working, I will change this to secrets.
on:
  workflow_dispatch:
    inputs:
      PRIVATE_KEY:
        description: 'aws ssh key in a pem file'
        required: true
      EC2_USER:
        description: 'the user to ssh into the ec2 instance'
        required: true
        default: 'ubuntu'
      EC2_HOST:
        description: 'public ip of the ec2 instance'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Write ssh key to infra/pk.pem
        run: |
          echo "${{ github.event.inputs.PRIVATE_KEY }}" > infra/pk.pem
          chmod 600 infra/pk.pem

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.11.0'

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.0'

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Generate Ansible inventory
        run: |
          echo "[ec2]" > infra/inventory.ini
          echo "target ansible_host=${{ github.event.inputs.EC2_HOST }} ansible_user=${{ github.event.inputs.EC2_USER }} ansible_ssh_private_key_file=infra/pk.pem" >> infra/inventory.ini

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'false'
        run: |
          ansible-playbook -i infra/inventory.ini infra/ansible/playbooks/install-kubernetes.yml

      #- name: Configure AWS CLI
      #  run: |
      #    aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
      #    aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #    aws configure set region us-east-1

      - name: Run Terraform
        run: |
          terraform -chdir=infra/terra init
          terraform -chdir=infra/terra apply -auto-approve

      - name: Deploy using Helm
        run: |
          ssh -i infra/pk.pem ${{ github.event.inputs.EC2_USER }}@${{ github.event.inputs.EC2_HOST }} << 'EOF'
          export KUBECONFIG=/home/${{ github.event.inputs.EC2_USER }}/kubeconfig
          helm upgrade --install team-robogo ./infra/helm/screen --namespace team-robogo --create-namespaces
          EOF    
