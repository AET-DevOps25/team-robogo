name: Rancher Deployment

on:
  workflow_dispatch:
    inputs:
      RANCHER_TOKEN:
        description: 'Rancher API Token'
        required: true
      CHAIR_API_KEY:
        description: 'CHAIR API Key for GenAI service'
        required: true
      OPENAI_API_KEY:
        description: 'OpenAI API Key for GenAI service'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.0'

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.11.0'

      - name: Write Kubeconfig file
        run: |
          cat > .kubeconfig <<EOF
          apiVersion: v1
          kind: Config
          clusters:
          - name: "student"
            cluster:
              server: "https://rancher.ase.cit.tum.de/k8s/clusters/c-m-nhcfjg9h"

          users:
          - name: "student"
            user:
              token: "${{ github.event.inputs.RANCHER_TOKEN }}"

          contexts:
          - name: "student"
            context:
              user: "student"
              cluster: "student"

          current-context: "student"
          EOF
          chmod 600 .kubeconfig

      - name: Create GenAI Secret
        env:
          KUBECONFIG: ${{ github.workspace }}/.kubeconfig
        run: |
          # Check if secret exists and patch it, otherwise create it
          if kubectl get secret genai-secret -n devops25-team-robogo >/dev/null 2>&1; then
            echo "Secret genai-secret already exists, patching it..."
            kubectl patch secret genai-secret -n devops25-team-robogo \
              --type='merge' \
              -p="{\"data\":{\"CHAIR_API_KEY\":\"$(echo -n "${{ github.event.inputs.CHAIR_API_KEY }}" | base64)\",\"OPENAI_API_KEY\":\"$(echo -n "${{ github.event.inputs.OPENAI_API_KEY }}" | base64)\"}}"
          else
            echo "Creating new secret genai-secret..."
            kubectl create secret generic genai-secret \
              --from-literal=CHAIR_API_KEY="${{ github.event.inputs.CHAIR_API_KEY }}" \
              --from-literal=OPENAI_API_KEY="${{ github.event.inputs.OPENAI_API_KEY }}" \
              -n devops25-team-robogo
          fi

      - name: Helm Deployment
        env:
          KUBECONFIG: ${{ github.workspace }}/.kubeconfig
        run: |
          cd ./infra/helm/screen
          helm dependency build
          kubectl label namespace devops25-team-robogo app.kubernetes.io/managed-by=Helm --overwrite || true
          kubectl annotate namespace devops25-team-robogo meta.helm.sh/release-name=screen --overwrite || true
          kubectl annotate namespace devops25-team-robogo meta.helm.sh/release-namespace=devops25-team-robogo --overwrite || true
          helm upgrade --install screen . --namespace devops25-team-robogo --skip-crds
          
      - name: Verify Secret Creation
        env:
          KUBECONFIG: ${{ github.workspace }}/.kubeconfig
        run: |
          kubectl get secret genai-secret -n devops25-team-robogo -o yaml
