---
config:
  look: handDrawn
---
sequenceDiagram
    participant Client1 as Screen Display 1
    participant Client2 as Screen Display 2
    participant Gateway as API Gateway
    participant Server as Spring Boot Server
    participant SyncService as SlideDeckSyncService
    participant DB as Database
    Note over Client1,DB: Initial Sync - All Screens Start
    Client1->>Gateway: HTTP Poll - Check version & lastUpdate
    Gateway->>Server: Route API Request
    Server->>SyncService: getSyncStatus(deckId)
    SyncService->>DB: Query SlideDeck table
    DB-->>SyncService: Return version, lastUpdate, transitionTime
    SyncService-->>Server: Return sync status
    Server-->>Gateway: Return sync data
    Gateway-->>Client1: Return current sync status
    Client2->>Gateway: HTTP Poll - Check version & lastUpdate
    Gateway->>Server: Route API Request
    Server->>SyncService: getSyncStatus(deckId)
    SyncService->>DB: Query SlideDeck table
    DB-->>SyncService: Return version, lastUpdate, transitionTime
    SyncService-->>Server: Return sync status
    Server-->>Gateway: Return sync data
    Gateway-->>Client2: Return current sync status
    Note over Client1,DB: Content Update Occurs
    Server->>DB: Update SlideDeck content
    DB->>DB: Increment version, update lastUpdate timestamp
    Server->>SyncService: forceSyncUpdate(deckId)
    SyncService->>DB: Update version and lastUpdate
    DB-->>SyncService: Confirm update
    SyncService-->>Server: Return updated sync status
    Note over Client1,DB: Clients Detect Change and Sync
    Client1->>Gateway: HTTP Poll - Check version & lastUpdate
    Gateway->>Server: Route API Request
    Server->>SyncService: getSyncStatus(deckId)
    SyncService->>DB: Query SlideDeck table
    DB-->>SyncService: Return new version and lastUpdate
    SyncService-->>Server: Return updated sync status
    Server-->>Gateway: Return updated sync data
    Gateway-->>Client1: Return updated content and sync status
    Client2->>Gateway: HTTP Poll - Check version & lastUpdate
    Gateway->>Server: Route API Request
    Server->>SyncService: getSyncStatus(deckId)
    SyncService->>DB: Query SlideDeck table
    DB-->>SyncService: Return new version and lastUpdate
    SyncService-->>Server: Return updated sync status
    Server-->>Gateway: Return updated sync data
    Gateway-->>Client2: Return updated content and sync status
    Note over Client1,DB: Score Update Triggers Sync
    Server->>DB: Update Score table
    DB->>DB: Auto-increment related SlideDeck version
    Server->>SyncService: forceSyncUpdate(deckId)
    SyncService->>DB: Update version and lastUpdate
    DB-->>SyncService: Confirm update
    SyncService-->>Server: Return updated sync status
    Note over Client1,DB: Real-time Sync Across Screens
    loop Every 5 seconds
        Client1->>Gateway: HTTP Poll - Check version & lastUpdate
        Gateway->>Server: Route API Request
        Server->>SyncService: isSyncNeeded(deckId, lastKnownUpdate)
        SyncService->>DB: Compare timestamps
        alt Sync needed
            DB-->>SyncService: Return new version and lastUpdate
            SyncService-->>Server: Return updated sync status
            Server-->>Gateway: Return updated sync data
            Gateway-->>Client1: Return updated content
        else No sync needed
            DB-->>SyncService: Return current version
            SyncService-->>Server: Return no change
            Server-->>Gateway: Return no change
            Gateway-->>Client1: Return no change
        end
    end
