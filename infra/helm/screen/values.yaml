project:
  name: screen

db:
  name: robogo_db
  user: robogo
  host: db-service
  password: robogo_pass
  port: 5432

gateway:
  image: ghcr.io/aet-devops25/team-robogo/api-gateway:main
  imagePullPolicy: IfNotPresent
  port: 8080

server:
  image: ghcr.io/aet-devops25/team-robogo/server:main
  imagePullPolicy: IfNotPresent
  port: 8081
  adminUsername: admin
  adminPassword: admin
  adminEmail: admin@example.com

client:
  image: ghcr.io/aet-devops25/team-robogo/client:main
  imagePullPolicy: IfNotPresent
  imageTag: main
  apiGatewayHost: gateway-service
  port: 80
  targetPort: 3000
  nodePort: 30000

genai:
  image: ghcr.io/aet-devops25/team-robogo/genai:main
  port: 5000
  chairApiKey: "sk-xxx"
  openaiApiKey: "sk-yyy"

ingress:
  enabled: true
  ingressClassName: nginx # TODO: remove in cloud
  annotations: {}
  tls: false


promtail:
  image:
    repository: grafana/promtail
    tag: 2.9.2
  resources: {}
  lokiUrl: http://loki:3100/loki/api/v1/push

loki:
  image:
    repository: grafana/loki
    tag: 2.9.2
  replicas: 1
  resources: {}
  service:
    port: 3100
  persistence:
    enabled: false
    size: 5Gi
    storageClassName: ""

prometheus:
  image:
    repository: prom/prometheus
    tag: v2.45.0
  service:
    port: 9090
  resources: {}
  persistence:
    enabled: false
    size: 5Gi
    storageClassName: ""

grafana:
  image:
    repository: grafana/grafana
    tag: 10.1.5
  service:
    port: 3000
  resources: {}
  adminUser: admin
  adminPassword: admin
  persistence:
    enabled: false
    size: 5Gi
    storageClassName: ""
  datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus.team-robogo.svc:9090
      isDefault: true
    - name: Loki
      type: loki
      access: proxy
      url: http://loki.team-robogo.svc:3100
      isDefault: false

postgresExporter:
  port: 9187