apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.grafana.adminUser | quote }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.grafana.adminPassword | quote }}
            - name: GF_SERVER_ROOT_URL
              value: "https://grafana.{{ .Values.ingress.host }}/"
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "false"
            {{- if .Values.grafana.tls }}
            - name: GF_SERVER_PROTOCOL
              value: "https"
            - name: GF_SERVER_DOMAIN
              value: "grafana.{{ .Values.ingress.host }}"
            - name: GF_SERVER_SERVE_FROM_SUB_PATH
              value: "true"
            - name: GF_SECURITY_COOKIE_SECURE
              value: "true"
            {{- end }}
          ports:
            - containerPort: {{ .Values.grafana.service.port }}
          resources:
            {{- toYaml .Values.grafana.resources | nindent 12 }}
          volumeMounts:
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/dashboards/
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/dashboards-provider/dashboard-provider.yml
              subPath: dashboard-provider.yml
      volumes:
        - name: datasources
          configMap:
            name: grafana-datasources
        - name: grafana-config
          configMap:
            name: grafana-config