apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: loki
  replicas: {{ .Values.loki.replicas }}
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: "{{ .Values.loki.image.repository }}:{{ .Values.loki.image.tag }}"
          args:
            - -config.file=/etc/loki/loki.yaml
          ports:
            - containerPort: {{ .Values.loki.service.port }}
          resources:
            {{- toYaml .Values.loki.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: loki-data
              mountPath: /loki
      volumes:
        - name: config
          configMap:
            name: loki-config
{{- if .Values.loki.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: loki-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.loki.persistence.size }}
        {{- if .Values.loki.persistence.storageClassName }}
        storageClassName: {{ .Values.loki.persistence.storageClassName }}
        {{- end }}
{{- else }}
        - name: loki-data
          emptyDir: {}
{{- end }}